%EG_2D_DEADZONE y-stam run of U-shaped well test
%   Checks if the assembly can escape a U-shape well to find a goal tile on
%   the other side
n = 200;
dzs = -10;
bf = 0.5;
ystam(n, ...
    "GrowthMode", "radial", ...
    'Gse', 0.999, ...
    'BranchingFactor', bf, ...
    'TurningFactor', 0.2, ...
    'MaxTrials', 1, ...
    'ECM', [10 3 0.01 0.5 0.2 0], ...
    'TimeLimit', 1000, ...
    'CMode', [0 3 0 0], ...
    'Feedback', true, ...
    'ShowRun', true, ...
    'ShowHeatMap', false, ...
    'ShowECM', true, ...
    'Continuous', true, ...
    'NumSeeds', [1 1], ...
    'SetRoot', [100, 100], ...
    'SetGoal', [ceil(n/2), ceil(n*3/4)], ...
    'DeadZone', [0.6 69/n 2/n 60/n; 0.4 128/n 40/n 2/n; 0.4 68/n 40/n 2/n], ... % The last column deadzone is [1 1/n 1/n 1], but it seems to create some conflicting behavior with the feedback path
    'DeadZoneECM', [dzs 7])

